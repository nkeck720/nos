NOTE: I am looking for other people who are skilled in FASM and are willing to help
      with this Git repository. For more info, email me at noahkeck72@gmail.com
      with a subject line of "NOS." (I am not a bot, so *please* don't be the idiot
      who sends me an email with only the subject line. You know who you are. -_-)

This Git repository contains the source and binary code for NOS.

KNOWN BUGS AS OF THIS DATE:
- Backspace key works, but teleports the cursor to the center of the screen.
- Screen does not scroll down.
- The keyboard works, but currently unprocessed keys like arrow and home, etc. display spaces

FIXED BUGS AS OF THIS DATE:
+ Removed INT 21 due to severe code issues
+ Added NOSFS (NOS FileSystem)
+ Fixed only spaces will type
+ Fixed stack issues
+ Fixed version display issues
+ Removed Easter Eggs (trying to fit as much code in the MBR as possible)
+ Replaced INT 10-09 with INT 10-0E
+ Removed header (0xFF80) to system-reserved sectors (such as the MBR and INT 21 sector) (was causing code issues)

CREATING A FLOPPY FROM THE IMAGES
To compile the OS, use the following command:

$ ./compile.sh

This will compile the OS into a .img file called NOS.img (floppy image file) and will attempt to write the image to /dev/fd0 (drive A: in DOS). If you don't want to write it to a physical floppy disk, just leave the drive empty and the command will leave the image.

For those using FASM for Windows:

Compile each of the asm files, in this order:

myos.asm
fsb.asm
kernel.asm
image.asm

The 'image.bin' output file is what will be used as an image file. (Rename it if you wish to image.img).